# This is a basic workflow to help you get started with Actions

name: CI2

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
  pull_request:
    types: [opened, synchronize, closed]


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: version number to display
        type: string
        default: 0.0.1

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world second type!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script. Print the event type
        run: |
          echo "event_name: " ${{ github.event_name }}
          echo "event_type: " ${{ github.event.event_type }}
          echo "The Title of your PR is" ${{ github.event.pull_request.title }}
          echo "Pull request number: " ${{ github.event.pull_request.number }}
          echo "push ref: " ${{ github.event.push.ref }}
          echo "GITHUB_REF: " $GITHUB_REF
          echo "GitHub Event: " ${{ fromJSON(github.event) }}
          echo Add other actions to build,
          echo test, and deploy your project.
          npm i octokit
  
      - uses: actions/github-script@v6
        id: set-result
        env:
          PULL_REQUEST_NUMBER: ${{ github.event.pull_request.number }}
        with:
          script: |
            const { Octokit } = require('octokit');

            const owner = 'jamesmortensen';
            const repo = 'pull-request-test';
            const pullNumber = process.env.PULL_REQUEST_NUMBER;

            (async () => {
            // Octokit.js
            // https://github.com/octokit/core.js#readme
            const octokit = new Octokit({
              auth: process.env.GITHUB_TOKEN
            })

            const response = await octokit.request(`GET /repos/${owner}/${repo}/pulls/${pullNumber}`, {
              owner: owner,
              repo: repo,
              pull_number: pullNumber,
              headers: {
                'X-GitHub-Api-Version': '2022-11-28'
              }
            })

            // This gets the PR title
            console.log(response.data.title);

            })();

